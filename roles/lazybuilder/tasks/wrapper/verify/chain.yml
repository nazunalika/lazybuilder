---
# chain check
- name: "Single NEVRA verification"
  block:
    - name: "Get NEVRA from RPM"
      command:
        argv:
          - "/usr/bin/rpm"
          - "-qp"
          - "{{ chain_item }}"
          - "--qf"
          - "%{NAME}-%{VERSION}-%{RELEASE}"
      changed_when: "1 != 1"
      failed_when: "srpm_nevra_ret.rc != 0"
      register: srpm_nevra_ret
      tags:
        - mock
        - verify
        - git_pull
        - srpm_pull

    - name: "Get name from RPM"
      command:
        argv:
          - "/usr/bin/rpm"
          - "-qp"
          - "{{ chain_item }}"
          - "--qf"
          - "%{NAME}"
      changed_when: "1 != 1"
      failed_when: "srpm_name_ret.rc != 0"
      register: srpm_name_ret
      tags:
        - mock
        - verify
        - git_pull
        - srpm_pull

    - name: "Check for skip file"
      stat:
        path: "{{ repo_drop_path_results }}/{{ srpm_name_ret.stdout }}/{{ srpm_nevra_ret.stdout }}/{{ mock_arch }}/skip"
      register: skip_file_check
      check_mode: false
      changed_when: "1 != 1"
      tags:
        - mock
        - verify
        - git_pull
        - srpm_pull

    - name: "Check global skip file"
      shell: "grep '^{{ srpm_name_ret.stdout }}$' {{ repo_path }}/common/{{ dist }}_{{ mock_arch }}_skip"
      register: global_skip_file_check
      changed_when: "1 != 1"
      ignore_errors: true
      tags:
        - mock
        - verify
        - git_pull
        - srpm_pull

    - name: "Identify all built RPMs from previous build if possible"
      find:
        paths: "{{ repo_drop_path_results }}/{{ srpm_name_ret.stdout }}/{{ srpm_nevra_ret.stdout }}/{{ mock_arch }}"
        recurse: true
        patterns:
          - '*.noarch.rpm'
          - '*.{{ mock_arch }}.rpm'
      register: ident_build_rpms
      tags:
        - mock
        - verify
        - git_pull
        - srpm_pull

    - name: "Check if there is a build in progress for this package"
      stat:
        path: "{{ repo_drop_path_results }}/{{ srpm_nevra_ret.stdout }}_{{ mock_arch }}_in_progress"
      register: in_progress_file_nevra_check
      check_mode: false
      changed_when: "1 != 1"
      tags:
        - mock
        - verify
        - git_pull
        - srpm_pull

    - name: "Adding to list if valid"
      set_fact:
        mock_srpm_path: "{{ mock_srpm_path + [ chain_item ] }}"
        mock_srpm_nevra: "{{ mock_srpm_nevra + [ srpm_nevra_ret.stdout ] }}"
      when:
        - (ident_build_rpms.files|length < 0)
        - (not skip_file_check.stat.exists)
        - (global_skip_file_check.rc == 0)
        - (not in_progress_file_nevra_check.stat.exists)
      tags:
        - mock
        - verify
        - git_pull
        - srpm_pull

  rescue:
    - name: We failed, display the error.
      debug:
        msg: "Failed to build our RPM: {{ ansible_failed_result }}"

    - name: Perform full cleanup
      file:
        path: '{{ item }}'
        state: absent
      loop:
        - '{{ mock_builder_source_dir }}/{{ source_name }}'
        - '{{ mock_builder_rpmbuild_dir }}'
        - '{{ mock_builder_module_dir }}'
      when:
        - enable_cleanup|bool

    - name: System is no longer in use
      file:
        path: '{{ item }}'
        state: absent
      loop:
        - "/var/tmp/.build_in_progress"

    - name: Fail when there's an error in the block
      fail:
        msg: "Exiting entire play"
...
